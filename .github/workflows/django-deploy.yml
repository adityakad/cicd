name: Django CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'dishoom-webapp/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        working-directory: ./dishoom-webapp/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run Django tests
        working-directory: ./dishoom-webapp/backend
        run: |
          python manage.py test --settings=backend.settings
          
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Django Docker image
        working-directory: ./dishoom-webapp/backend
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: dishoom-webapp
        run: |
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:latest .
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:${{ github.sha }} .
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Server - Rolling Update
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "🚀 Starting rolling deployment of Django app..."
            
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dishoom-webapp:latest
            
            # Function to update a single container
            update_container() {
              local container_num=$1
              local port=$((8000 + container_num))
              local container_name="dishoom-app-$container_num"
              
              echo "📦 Updating $container_name on port $port..."
              
              # Stop the old container
              docker stop $container_name 2>/dev/null || true
              docker rm $container_name 2>/dev/null || true
              
              # Start new container
              docker run -d \
                --name $container_name \
                --restart unless-stopped \
                -p $port:8000 \
                ${{ secrets.DOCKERHUB_USERNAME }}/dishoom-webapp:latest
              
              # Wait a moment for container to start
              sleep 3
              
              # Check if container is running
              if docker ps | grep -q $container_name; then
                echo "✅ $container_name updated successfully"
              else
                echo "❌ Failed to update $container_name"
                return 1
              fi
            }
            
            # Update containers 1-24 with rolling deployment
            echo "🔄 Starting rolling update for all 24 containers..."
            
            for i in {1..24}; do
              update_container $i
              
              # Add a small delay between updates for rolling deployment
              if [ $i -lt 24 ]; then
                echo "⏳ Waiting before next container update..."
                sleep 5
              fi
            done
            
            echo "🎉 Rolling deployment completed!"
            echo "📊 Final container status:"
            docker ps --filter "name=dishoom-app-" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            
            # Verify all containers are running
            running_containers=$(docker ps --filter "name=dishoom-app-" --filter "status=running" --quiet | wc -l)
            if [ "$running_containers" -eq 24 ]; then
              echo "✅ All 24 containers are running successfully!"
              echo "🌐 Django app is available on ports 8001-8024"
            else
              echo "⚠️  Warning: Only $running_containers out of 24 containers are running"
              exit 1
            fi
